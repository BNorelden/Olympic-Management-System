class User:
	protected:
		String name
		String phoneNum
		int age
		String email
		static int ticCount = 0
		ArrayList ticket
	public:
		User(String userId, String name, String phoneNum, int age, String email):
			setName(name)
			setPhoneNum(phoneNum)
			setAge(age)
			setEmail(email)

		void setName(String name) throws inputException:
			for(int i = 0; i < name.length(); i++):
				if((name.charAt(i) < 'A' || name.charAt(i) > 'z') && name.charAt(i) != ' '):
					throw new inputException("Names are not allowed to contain numbers or special characters!")
			this.name = name

		void setPhoneNum(String phoneNum) throws inputException:
			if(phoneNum.length() != 10):
				throw new inputException("Phone numbers must contain 10 digits!")
			this.phoneNum = phoneNum

		void setAge(int age) throws inputException:
			if(age <= 0):
				throw new inputException("Age must be greater than zero!")
			this.age = age

		void setEmail(String email) throws inputException:
			if(email.substring(email.length() - 4) != ".com" || email.substring(email.length() - 4) != ".org" || 
			email.substring(email.length() - 4) != ".net" || email.substring(email.length() - 4) != ".edu" || 
			email.indexOf('@') == -1):
				throw new inputException("Invalid email format!")
			this.email = email

		String getName():
			return name

		String getPhoneNum():
			return phoneNum

		int getAge():
			return age

		String getEmail():
			return email

		ArrayList getTickets():
			return ticket

		void buyTicket(Event e):
			Ticket tic = new Ticket()
			ticCount++
			tic.set(ticCount, e)
			ticket.add(tic)
			ticket.get(ticket.size() - 1).displayTicket()